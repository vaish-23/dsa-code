#include<stdio.h>

typedef struct node
{
    int data;
    struct node *next;
}NODE;

struct node *front=0;
struct node *rear=0;
void enqueue(int x);
void dequeue();
void display();
void peek();

void main()
{
    int x,choice;
    for(;;)
    {
         printf("\n1- enqueue\n 2-dequeue\n 3-display\n 4-peek\n");
        scanf("%d",&choice);
        switch(choice)
        {
        case 1:printf("Enter the data=\n");
        scanf("%d",&x);
        enqueue(x);
        break;

        case 2:
            dequeue();
            break;

        case 3:
            display();
            break;

        case 4:
            peek();
            break;

        default:
            exit(0);
        }
    }
}

void enqueue(int x)
{
   NODE *newnode;
   newnode=(NODE*)malloc(sizeof(struct node));
   newnode->data=x;
   newnode->next=0;
   if(rear==0)
   {
       front=rear=newnode;
       rear->next=front;
   }
  else
  {
      rear->next=newnode;
      rear=newnode;
      rear->next=front;
  }

}

void dequeue()
{
    NODE *temp;
    temp=front;
    if(front==0 && rear==0)
    {
        printf("Queue is empty");
    }
    else if(rear==front)
    {
        front=rear=0;
        free(temp);
    }
    else
    {
        printf("%d",front->data);
        front=front->next;
        rear->next=front;
        free(temp);
    }
}

void display()
{
    NODE *temp;
    temp=front;
    if(front==0 && rear==0)
    {
        printf("Queue is empty");
    }
    else
    {
        while(temp->next!=front)
        {
            printf("%d\n",temp->data);
            temp=temp->next;
        }
         printf("%d\n",temp->data);
    }
}

void peek()
{
  if(front==0 && rear==0)
    {
        printf("Queue is empty");
    }

    else
    {
         printf("%d",front->data);
    }
}
